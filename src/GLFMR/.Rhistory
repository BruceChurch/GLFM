patterns<-patterns[order(L,decreasing=TRUE),]
patterns
C <- rep(0,N)
C
C[1]<-r
C
C[1]<-'r'
C
C[c(1,2)]<-'r'
C
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
reuire(Rcpp)
require(Rcpp)
compileAttributes("/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample", verbose=TRUE)
install.packages(â€˜/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExampleâ€™, repos = NULL, type="source")
install.packages('/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample', repos = NULL, type="source")
compileAttributes("/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample", verbose=TRUE)
install.packages('/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample', repos = NULL, type="source")
X<-matrix(c(c(1,2,3),c(4,5,6),nrow=2,ncol=3,byrow=TRUE))
X
X<-matrix(c(c(1,2,3),c(4,5,6)),nrow=2,ncol=3,byrow=TRUE)
X
X[2,2]<--1
X
sapply(X,function(x){which(X[,x]==-1)})
sapply(X,function(x){which(X==-1)})
X[4]
sapply(X,function(x){which(X[x,]==-1)})
help("max.col")
help("min.col")
max.col(-X)
max.col(-t(X))
require(matrixStats)
colMins
colMins(X)
colMins(X[which(X!=-1)])
X[which(X!=-1)]
[which(X!=-1)]
which(X!=-1)
(X!=-1)
X[(X!=-1)]
X
colMins(X[(X!=-1)])
A<-(X!=-1)
A
X[A]
is.matrix(A)
X
dd<-which(X==-1)
XX[-dd]
X[-dd]
X_aux<-X
idx_missing<-which(X==-1)
idx_missing
aa<-max(X_aux)
X_aux[idx_missing] <- aa+1
V_offset<-colMins(X_aux)
X_aux
V_offset_mat<-matrix(V_offset,nrow=N,ncol=D,byrow=TRUE)
V_offset_mat<-matrix(V_offset,nrow=2,ncol=3,byrow=TRUE)
V_offset_mat
idx_catord<-1
idx_catord<-which(data$C=='c'||data$C=='o')
X[,idx_catord] <-X_aux[,idx_catord]
X
X
X[idx_missing]<--2
X
X<-matrix(0,nrow=10,ncol=3)
X
X[10,2]<--1
X
X[1,2]<--1
X[3,2]<-5
X
X[2,1]<--20
X[4,3]<--1
X
X[4,1]<-3
X
X[4,1]<--1
X[4,3]<-6
X
idx_missing<-which((data$X)==-1)
idx_missing<-which((X)==-1)
idx_missing
X_aux<-X
aa<-max(X_aux)
X_aux[idx_missing] <- aa+1
V_offset<-colMins(X_aux)
V_offset_mat<-matrix(V_offset,nrow=N,ncol=D,byrow=TRUE)
aa<-max(X_aux)
X_aux[idx_missing] <- aa+1
V_offset<-colMins(X_aux)
V_offset_mat<-matrix(V_offset,nrow=10,ncol=3,byrow=TRUE)
V_offset_mat
X_aux<-data$X-V_offset_mat+1
X_aux<-X-V_offset_mat+1
X_aux
idx_catord<-c(1, 2, 3)
idx_catord<-c(1, 2)
X[,idx_catord] <-X_aux[,idx_catord]
X
X[idx_missing]<--1
X
idx_catord<-c(1, 2, 3)
X[,idx_catord] <-X_aux[,idx_catord]
X[idx_missing]<--1
X
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
params
source("init_default_params.R")
data<-list("X"=X,"C"=C)
data
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
m0<-matrix(0,N,2)
Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
if(params$bias == 1 && length(params$bias)>0){
Z <-cbind(rep(1,N),Z)
}
# Inference
data<-list("X"=X,"C"=C)
params2<-init_default_params(data,params)
params2
# demo_data_exploration_prostate
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
m0<-matrix(0,N,2)
Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
if(params$bias == 1 && length(params$bias)>0){
Z <-cbind(rep(1,N),Z)
}
# Inference
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
# demo_data_exploration_prostate
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
m0<-matrix(0,N,2)
Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
if(params$bias == 1 && length(params$bias)>0){
Z <-cbind(rep(1,N),Z)
}
# Inference
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
source("GLFM_infer.R")
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
# demo_data_exploration_prostate
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
m0<-matrix(0,N,2)
Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
if(params$bias == 1 && length(params$bias)>0){
Z <-cbind(rep(1,N),Z)
}
# Inference
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
source("GLFM_infer.R")
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
source("GLFM_infer.R")
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
source("GLFM_infer.R")
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
source("GLFM_infer.R")
rm(list=ls())
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-0
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data<-list("X"=X,"C"=C)
output <- GLFM_infer(data, list(Z,params))
compileAttributes("/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample", verbose=TRUE)
install.packages('/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample', repos = NULL, type="source")
compileAttributes("/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample", verbose=TRUE)
install.packages('/Users/maria/Documents/Working_papers/FAP_Rpackage/GLFM/src/RcppGSLExample', repos = NULL, type="source")

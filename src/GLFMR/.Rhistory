leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_c.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
warnings()
Zp*as.vector((output$hidden$B[[1]][,1]-output$hidden$B[[1]][,2]))
Zp*as.vector((output$hidden$B[[1]][,1]-output$hidden$B[[1]][,2]))'
source("pdf_p.R")
source("pdf_c.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
ord_labels2<-aux2[c(1, 4, 2, 3)]
ord_labels2
cat_labels3<-aux3[c(1, 4, 2, 3)]
cat_labels3
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("GLFM_computePDF.R")
source("pdf_p.R")
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("GLFM_computePDF.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
params
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_computePDF.R")
Zp*(output$hidden$B[[5]])
Zp%*%(output$hidden$B[[5]])
params
hidden
mu
output$hidden
f_p_1(0.0953, output$hidden$mu[[5]], output$hidden$w[[5]])
f_p_1(0.0953, output$hidden$mu[[5]], output$hidden$w[[5]])
source("f_p_1.R")
f_p_1(0.0953, output$hidden$mu[[5]], output$hidden$w[[5]])
pdf_p(0.0953,Zp,output$hidden$B[[5]],output$hidden$mu[[5]], output$hidden$w[[5]],output$hidden$mu[[5]], 1,params)
pdf_p(0.0953,Zp,output$hidden$B[[5]],output$hidden$mu[[5]], output$hidden$w[[5]],output$hidden$mu[[5]], 1,c())
source("pdf_p.R")
pdf_p(0.0953,Zp,output$hidden$B[[5]],output$hidden$mu[[5]], output$hidden$w[[5]],output$hidden$mu[[5]], 1,c())
pdf_p(0.0953,Zp,output$hidden$B[[5]],output$hidden$mu[[5]], output$hidden$w[[5]],output$hidden$mu[[5]], 1
)
pdf_p(0.0953,Zp,output$hidden$B[[5]],output$hidden$mu[[5]], output$hidden$w[[5]],output$hidden$mu[[5]])
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
source("GLFM_computePDF.R")
source("GLFM_plotPatterns.R")
source("remove_dims.R")
source("get_feature_patterns_sorted.R")
source("computeLeg.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("GLFM_computePDF.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("pdf_p.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("pdf_p.R")
source("pdf_p.R")
source("pdf_p.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
graphics.off()
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
C
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_computePDF.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("GLFM_computePDF.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_computePDF.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
pdf_val
source("pdf_p.R")
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_c.R")
source("GLFM_computePDF.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_computePDF.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("pdf_p.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
print(abs(f_p_1(x, mu, w)))
return(pdf_out)
pdf_p<-function(x,Zp, B, mu, w, s2Y){
source("f_p_1.R")
pdf_out <- 1/(2*pi*sqrt(s2Y + params$s2u))*exp( -1/(2*(s2Y + params$s2u))*(f_p_1(x, mu, w) - Zp %*%B)*as.vector(f_p_1(x, mu, w) - Zp %*%B))
# pdf_out<-pdf_out*as.vector(abs(f_p_1(x, mu, w)) )
print(abs(f_p_1(x, mu, w)))
return(pdf_out)
}
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
return(pdf_out)
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("pdf_p.R")
graphics.off()
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
0.99999916*3.840670e-02
0.99999916*(3.840670e-02)
source("df_p_1.R")
source("df_p_1.R")
source("pdf_p.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
2.27950*(3.840670e-02)
source("pdf_p.R")
source("GLFM_computePDF.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,5)
idxs_nans <- which(is.nan(data_prost$X[,5]))
idxs_nonnans<-setdiff(1:(length(data_prost$X[,5])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,5])
MM <- max(data_prost$X[idxs_nonnans,5])
h <- hist(data_prost$X[idxs_nonnans,5], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
condition <- rep(as.character(leges) , ncol(pdf_val$pdf))
sa_den <- stack(as.data.frame(t(pdf_val$pdf)))
#sa_den$ind<-condition
sa_den$x<-rep(pdf_val$xd,nrow(pdf_val$pdf))
sa
sa_den
p9<-ggplot(sa_den, aes(x=x)) +  geom_line(aes(y=values, color=ind))
p9 + theme(legend.position="none")
plot(pdf_val$xd,pdf_val$pdf[1,])
plot(pdf_val$pdf[1,])
pdf_val$pdf[1,]
pdf_val$pdf
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
# Falta calcular la probabilidad empirica (es lo que llaman baseline)
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,5)
pdf_val
params

require(R.matlab)
require(ggplot2)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
source("GLFM_computePDF.R")
source("GLFM_plotPatterns.R")
source("remove_dims.R")
source("get_feature_patterns_sorted.R")
source("computeLeg.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-100
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data_prost<-list("X"=X,"C"=C)
output <- GLFM_infer(data_prost, list(Z,params))
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leg <-c('F0','F1', 'F2', 'F3', 'F4')
colours<-c()
C
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,2)
sa <- stack(as.data.frame(t(pdf_val$pdf)))
sa$ind<-condition
sa$x <- rep(seq_len(ncol(pdf_val$pdf)), nrow(pdf_val$pdf))
ggplot(sa, aes(fill=ind, y=values, x=x)) + geom_bar(position = "dodge", stat="identity")
sa
pdf_val
sa <- stack(as.data.frame((pdf_val$pdf)))
sa
sa$x <- rep(seq_len(ncol(pdf_val$pdf)), nrow(pdf_val$pdf))
sa
ggplot(sa, aes(fill=ind, y=values, x=x)) + geom_bar(position = "dodge", stat="identity")
C
idxs_nonnans<-setdiff(1:(length(data$X[,1])),idxs_nans)
mm <- min(data$X[idxs_nonnans,1])
MM <- max(data$X[idxs_nonnans,1])
h <- hist(data$X[idxs_nonnans,1], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,1)
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
par(new=T)
for(d in 2:P){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
#par(new=F)
#Includes the histogram from above
plot(h,freq=FALSE, main = "histogram of x (proportions)",axes=F)
par(new=F)
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,1)
pdf
pdf_val
idxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,1])
MM <- max(data_prost$X[idxs_nonnans,1])
h <- hist(data_prost$X[idxs_nonnans,1], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,1)
pdf_val
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
Z_p
Zp
idxs_nans <- which(is.nan(data_prost$X[,1]))
idxs_nans
idxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
idxs_nonnans
xd <- unique(data_prost$X[idxs_nonnans,1])
xd
data_prost$X[idxs_nonnans,1]
C
dxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,4])
MM <- max(data_prost$X[idxs_nonnans,4])
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,4)
plotcols<-c('red','blue','green','pink','yellow')
pdf_val
idxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,4])
MM <- max(data_prost$X[idxs_nonnans,4])
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,4)
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
par(new=T)
for(d in 2:P){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
for(d in 2:P){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
pdf_val
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
par(new=T)
for(d in 2:5){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
par(new=T)
for(d in 2:5){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
#par(new=F)
#Includes the histogram from above
plot(h,freq=FALSE, main = "histogram of x (proportions)",axes=F)
par(new=F)
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
idxs_nans<-which(data_prost$X[,4]))
idxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
idxs_nans<-which(data_prost$X[,4])
idxs_nonnans<-setdiff(1:(length(data_prost$X[,1])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,4])
MM <- max(data_prost$X[idxs_nonnans,4])
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
idxs_nans<-which(data_prost$X[,4])
idxs_nonnans<-setdiff(1:(length(data_prost$X[,4])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,4])
MM <- max(data_prost$X[idxs_nonnans,4])
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
idxs_nans<-which(is.nan(data_prost$X[,4]))
idxs_nans
idxs_nonnans<-setdiff(1:(length(data_prost$X[,4])),idxs_nans)
mm <- min(data_prost$X[idxs_nonnans,4])
MM <- max(data_prost$X[idxs_nonnans,4])
MM
mm
h <- hist(data_prost$X[idxs_nonnans,4], breaks=(mm-1):(MM+0.5))
h$density <- h$counts/sum(h$counts)
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,4)
plotcols<-c('red','blue','green','pink','yellow')
plot(pdf_val$xd,pdf_val$pdf[1,],xlab = "",ylab="",col=plotcols[1],type="b")
par(new=T)
for(d in 2:5){
plot(pdf_val$xd,pdf_val$pdf[d,],xlab = "",ylab="",col=plotcols[d],type="b",axes=F)
par(new=T)
#print("Press return to continue")
}
#par(new=F)
#Includes the histogram from above
plot(h,freq=FALSE, main = "histogram of x (proportions)",axes=F)
par(new=F)
require(ggplot2)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
source("GLFM_computePDF.R")
source("GLFM_plotPatterns.R")
source("remove_dims.R")
source("get_feature_patterns_sorted.R")
source("computeLeg.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-100
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data_prost<-list("X"=X,"C"=C)
output <- GLFM_infer(data_prost, list(Z,params))
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
source("GLFM_plotPatterns.R")
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
P<-dim(Zp)[2]
P
P<-dim(Zp)[1]
P
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
plot.new()
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
D<-dim(hidden$B[[1]])[1]
D<-dim(output$hidden$B[[1]])[1]
D
D<-dim(output$hidden$B)[1]
D
C
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
C
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
require(ggplot2)
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
require(ggplot2)
source("GLFM_plotPatterns.R")
require(ggplot2)
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
rm(list=ls())
graphics.off()
source("GLFM_plotPatterns.R")
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
m(list=ls())
graphics.off()
setwd("~/Documents/Working_papers/FAP_Rpackage/GLFM/src/GLFMR")
require(R.matlab)
require(ggplot2)
source("GLFM_infer.R")
source("GLFM_computeMAP.R")
source("GLFM_computePDF.R")
source("GLFM_plotPatterns.R")
source("remove_dims.R")
source("get_feature_patterns_sorted.R")
source("computeLeg.R")
datos_prostate<-readMat('prostate_v3.mat')
source("init_default_params.R")
Xauxi <- as.matrix(unlist(datos_prostate$data[2,1,1]),ncol=16,nrow= 502, byrow=TRUE)
Xfull<-aux<-matrix(Xauxi,nrow=502,ncol=16)
C<-unlist(datos_prostate$data[3,1,1],use.names = FALSE)
Cfull<-strsplit(as.character(C), "")
cat_labels_full <-unlist(datos_prostate$data[4,1,1],use.names = FALSE)
y_labels_full<-unlist(datos_prostate$data[5,1,1],use.names = FALSE)
y_labels_long_full<-unlist(datos_prostate$data[6,1,1],use.names = FALSE)
idx_toKeep <- c(1, 2, 4,13, 15)
X<-Xfull[,idx_toKeep]
C<-Cfull[[1]][idx_toKeep]
cat_labels<-cat_labels_full[idx_toKeep]
y_labels<-y_labels_full[idx_toKeep]
y_labels_long<-y_labels_long_full[idx_toKeep]
#params
param_names<-c("missing","s2u","s2B","alpha","Niter","maxK","bias")
missing<--1
s2u<-0.005
s2B<-1
alpha<-1
Niter<-100
maxK<-10
bias<-1
params<-list(missing,s2u,s2B,alpha,Niter,maxK,bias)
names(params)<-param_names
N<-dim(X)[1]
#m0<-matrix(0,N,2)
#Z <- apply(m0, c(1,2), function(x) sample(c(0,1),1,prob=c(0.8,0.2)))
#if(params$bias == 1 && length(params$bias)>0){
#  Z <-cbind(rep(1,N),Z)
#}
# Inference
Z<-c()
data_prost<-list("X"=X,"C"=C)
output <- GLFM_infer(data_prost, list(Z,params))
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
C
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,2)
#
# leges <- computeLeg(Zp,c())
# condition <- rep(as.character(leges) , ncol(pdf_val$pdf))
sa <- stack(as.data.frame((pdf_val$pdf)))
sa$ind<-condition
sa$x <- rep(seq_len(ncol(pdf_val$pdf)), nrow(pdf_val$pdf))
ggplot(sa, aes(fill=ind, y=values, x=x)) + geom_bar(position = "dodge", stat="identity")
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,2)
#
# leges <- computeLeg(Zp,c())
# condition <- rep(as.character(leges) , ncol(pdf_val$pdf))
sa <- stack(as.data.frame((pdf_val$pdf)))
# sa$ind<-condition
sa$x <- rep(seq_len(ncol(pdf_val$pdf)), nrow(pdf_val$pdf))
ggplot(sa, aes(fill=ind, y=values, x=x)) + geom_bar(position = "dodge", stat="identity")
graphics.off()
pdf_val<-GLFM_computePDF(data_prost,Zp,output$hidden,output$params,2)
#
# leges <- computeLeg(Zp,c())
# condition <- rep(as.character(leges) , ncol(pdf_val$pdf))
sa <- stack(as.data.frame((pdf_val$pdf)))
# sa$ind<-condition
sa$x <- rep(seq_len(ncol(pdf_val$pdf)), nrow(pdf_val$pdf))
ggplot(sa, aes(fill=ind, y=values, x=x)) + geom_bar(position = "dodge", stat="identity")
sa
c
C
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
source("GLFM_plotPatterns.R")
Kest <-dim(output$hidden$B[[1]])[1]
Zp <- diag(Kest)
Zp[,1] <- 1 # bias active
Zp <- Zp[1:(min(5,Kest)),]
leges <- computeLeg(Zp,c())
colours<-c('red','blue','green','pink','yellow')
GLFM_plotPatterns(data_prost,output$hidden,output$params,Zp, list("leges"=leges,"colours"=colours) )
graphics.off()
